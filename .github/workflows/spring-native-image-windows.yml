name: spring-native-image
on:
  push:
    paths:
      - 'spring-native-image/**'
      - '.github/workflows/spring-native-image-windows.yml'
  pull_request:
    paths:
      - 'spring-native-image/**'
      - '.github/workflows/spring-native-image-windows.yml'
  schedule:
    - cron: "0 0 1 * *" # run every month
  workflow_dispatch:
permissions:
  contents: read
jobs:
  run:
    name: Run 'spring-native-graal-windows'
    runs-on: windows-latest
    timeout-minutes: 20
    strategy:
      matrix:
        java-version: ['21', 'dev']
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
          native-image-job-reports: 'true'
      - name: Run 'spring-native-image'
        run: |
          cd spring-native-image
          mvn --no-transfer-progress package
          mvn --no-transfer-progress native:compile -Pnative
          echo "windows下面输出target directory下的文件"
          ls ./target
          ./target/benchmark-jibber &
          sleep 5
          curl http://localhost:8080/jibber        

        # 第三步：发布 Release
      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@master
        env:
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 之前GitHub添加的Token
        with:
            tag_name: ${{ github.ref }} # (tag)标签名称
            release_name: Release ${{ github.ref }}
            draft: false # 是否是草稿
            prerelease: false # 是否是预发布

        # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
            asset_path: ./release.tgz # 要上传文件
            asset_name: release.tgz # 上传后的文件名
            asset_content_type: application/x-tgz
